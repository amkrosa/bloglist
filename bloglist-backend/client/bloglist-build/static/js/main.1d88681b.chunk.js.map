{"version":3,"sources":["services/api.ts","services/blogs.ts","services/login.ts","services/users.ts","store/user/userActions.ts","store/blog/blogActions.ts","store/blog/types.ts","components/navbar/Navbar/NavbarMobile.tsx","components/navbar/Navbar/Navbar.tsx","components/navbar/Navbar/index.tsx","store/auth/authActions.ts","store/auth/types.ts","store/notification/notificationActions.ts","components/common/Popup.js","components/login/Login.tsx","components/login/index.tsx","components/common/Box.js","components/user/User.js","lib/ProtectedRoute.tsx","components/blog/Blog/BlogCard/index.tsx","components/home/Home.tsx","components/home/index.tsx","components/blog/Comments/SingleComment.tsx","lib/helpers.js","components/blog/Comments/CommentsNew/CommentsNew.tsx","components/blog/Comments/CommentsNew/index.tsx","components/blog/Comments/index.tsx","components/blog/Blog/BlogSingle/BlogSingle.tsx","components/blog/Blog/BlogSingle/index.tsx","components/profile/Settings.tsx","components/profile/Statistics.tsx","components/profile/Profile.tsx","components/profile/index.tsx","components/blog/Blog/BlogNew/NewBlogForm.tsx","components/blog/Blog/BlogNew/index.tsx","components/blog/Blog/BlogList/BlogList.tsx","components/blog/Blog/BlogList/index.tsx","components/blog/Blog/index.tsx","Routes.tsx","App.tsx","store/blog/blogReducer.ts","store/notification/notificationReducer.ts","store/auth/authReducer.ts","store/user/userReducer.ts","store/store.ts","store/notification/types.ts","store/user/types.ts","index.tsx"],"names":["Api","baseUrl","token","Object","classCallCheck","this","_baseUrl","_token","_config","concat","id","axios","get","response","data","console","error","_context","t0","object","withAuth","post","_context2","put","_context3","delete","_context4","_context5","credentials","_context6","newToken","headers","Authorization","undefined","blogsApi","services_blogs","getAll","regenerator_default","a","async","prev","next","awrap","abrupt","sent","stop","create","update","remove","comment","api","loginApi","services_login","login","usersApi","services_users","getUserById","state","filter","user","getCurrentUser","users","auth","initializeBlogs","dispatch","blogs","type","blogService","getBlogById","blog","getBlogsMostPopular","n","toConsumableArray","sort","b","likes","reverse","slice","getBlogsRecentlyAdded","NavbarMobile","_ref","handleLogout","react_default","createElement","Dropdown","item","icon","simple","Menu","Item","link","href","Divider","onClick","Navbar","props","_props$auth","_props$auth2","history","useHistory","handleLogoutClick","logout","push","Fragment","Responsive","minWidth","as","size","secondary","className","name","content","position","Header","active","Button","Group","positive","Or","color","maxWidth","Navbar_NavbarMobile","mapDispatchToprops","window","localStorage","removeItem","connect","setNotification","category","status","clearNotification","setTimedNotification","time","setTimeout","mapDispatchToProps","notification","useStyles","makeStyles","theme","success","backgroundColor","green","palette","dark","info","primary","main","warning","amber","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","classes","Icon","Snackbar","anchorOrigin","vertical","horizontal","key","open","onClose","autoHideDuration","ContentProps","aria-describedby","SnackbarContent","clsx","action","IconButton","aria-label","Close_default","login_Login","username","setUsername","password","setPassword","handleLogin","objectWithoutProperties","Grid","style","height","verticalAlign","textAlign","Column","Form","onSubmit","Input","label","value","onChange","_ref2","target","placeholder","_ref3","loginService","setItem","JSON","stringify","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","e","preventDefault","Box","box","width","margin","paddingTop","Grid_Grid","container","children","User","log","common_Box","map","title","rest","react_router","to","withRouter","Card","Content","Meta","author","Description","description","extra","Icon_Icon","comments","length","Home","Row","Blog_BlogCard","Container","pending","Loader","divided","padded","columns","direction","justify","blogsMostPopular","blogsRecentlyAdded","SingleComment","formattedDate","Date","parse","date","toUTCString","Comment","Avatar","src","Author","Metadata","Text","replaceItemById","array","index","replaceItem","findIndex","i","generateId","Math","random","toString","substr","CommentsNew_CommentsNew","setComment","handleSubmit","TextArea","addComment","_blog$comments","newComment","newBlog","objectSpread2","setErr","location","Comments","_window$localStorage$","parsedUser","getItem","Single","New","CommentsNew","BlogSingle","_ref$full","full","currentUser","centered","Subheader","text","addVote","deleteBlog","dividing","blog_Comments","newObject","button","Settings","Button_Button","variant","startIcon","Delete_default","Statistics","Profile","panes","menuItem","render","Tab","Pane","attached","profile_Statistics","profile_Settings","Segment","stackable","Image","bordered","rounded","floated","menu","pointing","NewBlogForm","setTitle","setContent","setDescription","submit","fluid","_ref4","addBlog","_useState5","_useState6","BlogNew_NewBlogForm","BlogList","blogsComponents","Blog","List","BlogCard","exact","path","home","blog_Blog","lib_ProtectedRoute","match","user_User","params","Blog_BlogSingle","components_login","profile","Blog_BlogNew","setUser","initializeUsers","userService","useEffect","loggedUserJSON","react_router_dom","basename","common_Popup","navbar_Navbar","src_Routes","initialState","reducer","combineReducers","arguments","element","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.1d88681b.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nclass Api {\n  private _baseUrl: string;\n  private _token?: string;\n  private _config?: Object;\n  constructor(baseUrl: string, token?: string) {\n    this._baseUrl = baseUrl;\n    this._token = `bearer ${token}`;\n  }\n\n  set token(newToken: string | null) {\n    this._token = `bearer ${newToken}`;\n    this._config = {\n      headers: { Authorization: this._token },\n    };\n  }\n  get token(): string | null {\n    if (this._token !== undefined) return this._token;\n    else return null;\n  }\n\n  async get(id?: string) {\n    let response;\n    try {\n      if (typeof id === 'undefined') {\n        response = await axios.get(this._baseUrl);\n      } else {\n        response = await axios.get(`${this._baseUrl}/${id}`);\n      }\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  async create(object: Object, id?: string, withAuth?: boolean) {\n    let response;\n    try {\n      if (typeof withAuth === 'undefined') {\n        response = await axios.post(this._baseUrl, object);\n      } else {\n        response = await axios.post(this._baseUrl, object, this._config);\n      }\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async update(object: Object, id?: string, withAuth?: boolean) {\n    let response: any;\n    try {\n      if (typeof withAuth === 'undefined') {\n        response = await axios.put(`${this._baseUrl}/${id}`, object);\n      } else {\n        await axios.put(`${this._baseUrl}/${id}`, object, this._config);\n      }\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async remove(id: string, withAuth?: boolean) {\n    let response;\n    try {\n      if (typeof withAuth === 'undefined') {\n        response = await axios.delete(`${this._baseUrl}/${id}`);\n      } else {\n        response = await axios.delete(`${this._baseUrl}/${id}`, this._config);\n      }\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async comment(object: string, id: string) {\n    try {\n      const response = await axios.post(\n        `${this._baseUrl}/${id}/comments`,\n        object,\n        this._config,\n      );\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async login(credentials: Object) {\n    try {\n      const response = await axios.post(this._baseUrl, credentials);\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nexport default Api;\n","import axios from 'axios';\nimport Api from './api';\nimport { Blog } from '../common/types';\nconst baseUrl = '/bloglist/api/blogs';\n\nconst blogsApi = new Api(baseUrl);\n\nconst getAll = async () => await blogsApi.get();\nconst get = async (id: string) => await blogsApi.get(id);\nconst create = async (object: Blog) =>\n  await blogsApi.create(object, undefined, true);\nconst comment = async (object: string, id: string) =>\n  await blogsApi.comment(object, id);\nconst update = async (object: Blog, id: string) =>\n  await blogsApi.update(object, id);\nconst remove = async (id: string) => {\n  try {\n    await blogsApi.remove(id, true);\n  } catch (e) {\n    console.error(e);\n  }\n};\nexport default {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  comment,\n  api: blogsApi,\n};\n","import axios from 'axios';\nimport Api from './api';\nconst baseUrl = '/bloglist/api/login';\n\nconst loginApi = new Api(baseUrl);\n\nconst login = async (credentials: Object) => await loginApi.login(credentials);\n\nexport default { login };\n","import Api from './api';\nconst baseUrl = '/bloglist/api/users';\n\nconst usersApi = new Api(baseUrl);\n\nconst getAll = async () => await usersApi.get();\nconst create = async (object: Object) => await usersApi.create(object);\n\nexport default { getAll, create };\n","import userService from \"../../services/users\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { User } from \"../../common/types\";\nimport { UserState } from \"./types\";\n\nexport const initializeUsers = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const users = await userService.getAll();\n    dispatch({\n      type: \"INIT_USERS\",\n      data: users\n    });\n  };\n};\n\nexport const registerUser = (\n  user: User\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const registeredUser = await userService.create(user);\n    console.log(registeredUser);\n    dispatch({\n      type: \"REGISTER_USER\",\n      data: registeredUser\n    });\n  };\n};\n\nexport const deleteUser = (\n  user: User\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    // const deletedUser = await userService.delete(user)\n    dispatch({\n      type: \"DELETE_USER\",\n      data: user.id\n    });\n  };\n};\n\n//selectors\nexport const getUserById = (state: UserState, id: string) =>\n  state.filter(user => user.id === id)[0];\n\nexport const getCurrentUser = (state: any) =>\n  getUserById(state.users, state.auth.id);\n","import blogService from '../../services/blogs';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { History } from 'history';\nimport {\n  BlogState,\n  INIT_BLOGS_PENDING,\n  INIT_BLOGS_SUCCESS,\n  INIT_BLOGS_FAILURE,\n  ADD_COMMENT,\n} from './types';\nimport { Blog } from '../../common/types';\n\nexport const addBlog = (\n  content: any,\n  history: History,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const blog = await blogService.create(content);\n    dispatch({\n      type: 'ADD_BLOG',\n      data: blog,\n    });\n    history.push(`/blogs/${blog.id}`, blog.id);\n  };\n};\n\nexport const deleteBlog = (\n  id: string,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    await blogService.remove(id);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: { id },\n    });\n  };\n};\n\nexport const updateBlog = (id: String) => {};\n\nexport const addVote = (\n  blog: Blog,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const newObject = {\n      ...blog,\n      likes: blog.likes + 1,\n    };\n    await blogService.update(newObject, blog.id ? blog.id : '');\n    dispatch({\n      type: 'ADD_VOTE',\n      data: newObject,\n    });\n  };\n};\n\nexport const addComment = (\n  blog: Blog,\n  comment: string,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const newComment = await blogService.comment(\n      comment,\n      blog.id ? blog.id : '',\n    );\n    const newBlog = { ...blog, comments: blog?.comments?.concat(newComment) };\n    dispatch({\n      type: ADD_COMMENT,\n      data: newBlog,\n    });\n  };\n};\n\n/*ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n>*/\n\nexport const initializeBlogs = (): any => {\n  return async (dispatch: any): Promise<any> => {\n    dispatch({\n      type: INIT_BLOGS_PENDING,\n    });\n    try {\n      const blogs = await blogService.getAll();\n      dispatch({\n        type: INIT_BLOGS_SUCCESS,\n        data: blogs,\n      });\n    } catch (e) {\n      dispatch({\n        type: INIT_BLOGS_FAILURE,\n        error: e,\n      });\n    }\n  };\n};\n\n//selectors\n\nexport const getBlogById = (state: any, id: string) =>\n  state.blogs.filter((blog: Blog) => blog.id === id)[0];\n\nexport const getBlogsMostPopular = (state: any, n: number) => {\n  const returnArray = [...state.blogs.blogs];\n  return returnArray\n    .sort((a: Blog, b: Blog) => a.likes - b.likes)\n    .reverse()\n    .slice(0, n);\n};\n\nexport const getBlogsRecentlyAdded = (state: any, n: number) => {\n  const returnArray = [...state.blogs.blogs];\n  return returnArray.reverse().slice(0, n);\n};\n","import { Blog } from '../../common/types';\n\nexport const ADD_BLOG = 'ADD_BLOG';\nexport const DELETE_BLOG = 'DELETE_BLOG';\nexport const UPDATE_BLOG = 'UPDATE_BLOG';\nexport const ADD_VOTE = 'ADD_VOTE';\nexport const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const INIT_BLOGS_PENDING = 'INIT_BLOGS_PENDING';\nexport const INIT_BLOGS_SUCCESS = 'INIT_BLOGS_SUCCESS';\nexport const INIT_BLOGS_FAILURE = 'INIT_BLOGS_FAILURE';\n\ninterface AddBlogAction {\n  type: typeof ADD_BLOG;\n  data: Blog;\n}\n\ninterface DeleteBlogAction {\n  type: typeof DELETE_BLOG;\n  data: Blog;\n}\n\ninterface AddVoteAction {\n  type: typeof ADD_VOTE;\n  data: Blog;\n}\n\ninterface UpdateBlogAction {\n  type: typeof UPDATE_BLOG;\n  data: Blog;\n}\n\ninterface AddCommentAction {\n  type: typeof ADD_COMMENT;\n  data: Blog;\n}\n\ninterface InitializeBlogsAction {\n  type:\n    | typeof INIT_BLOGS_PENDING\n    | typeof INIT_BLOGS_FAILURE\n    | typeof INIT_BLOGS_SUCCESS;\n  data: Blog[];\n  error: Error;\n}\n\nexport interface BlogState {\n  pending: boolean;\n  blogs: Blog[];\n  error: Error | null;\n}\n\nexport type BlogActionsType =\n  | AddBlogAction\n  | UpdateBlogAction\n  | DeleteBlogAction\n  | AddVoteAction\n  | AddCommentAction\n  | InitializeBlogsAction;\n","import React from 'react';\nimport { Menu, Dropdown, Icon } from 'semantic-ui-react';\n\nconst NavbarMobile = ({ handleLogout }: any) => {\n  return (\n    <Dropdown item icon=\"bars\" simple>\n      <Dropdown.Menu>\n        <Dropdown.Item link href=\"/bloglist\">\n          Home\n        </Dropdown.Item>\n        <Dropdown.Item link href=\"/bloglist/blogs\">\n          Blogs\n        </Dropdown.Item>\n        <Dropdown.Item link href=\"/bloglist/profile\">\n          Profile\n        </Dropdown.Item>\n        <Dropdown.Item link href=\"/bloglist/new\">\n          New\n        </Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item onClick={handleLogout}>Logout</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default NavbarMobile;\n","import React, { useState, MouseEvent } from 'react';\nimport {\n  Menu,\n  Dropdown,\n  Icon,\n  Responsive,\n  Header,\n  Button,\n} from 'semantic-ui-react';\nimport NavbarMobile from './NavbarMobile';\nimport { AuthState } from '../../../store/auth/types';\nimport './Navbar.scss';\nimport { useHistory } from 'react-router-dom';\n\ninterface INavbarProps {\n  auth?: AuthState;\n  logout?: any;\n}\n\nconst Navbar: React.FC<INavbarProps> = props => {\n  let history = useHistory();\n\n  const handleLogoutClick = () => {\n    props.logout();\n    history.push('/');\n  };\n\n  return (\n    <>\n      <Responsive\n        minWidth={500}\n        as={Menu}\n        size=\"large\"\n        secondary\n        className=\"navbar\"\n      >\n        <Menu.Item name=\"/\" content=\"Home\" link href=\"/bloglist\" />\n        <Menu.Item name=\"/blogs\" content=\"Blogs\" link href=\"/bloglist/blogs\" />\n        {props.auth?.token ? (\n          <>\n            <Menu.Item\n              name=\"/profile\"\n              content=\"Profile\"\n              link\n              href=\"/bloglist/profile\"\n            />\n            <Menu.Item name=\"/new\" content=\"New\" link href=\"/bloglist/new\" />\n          </>\n        ) : null}\n        <Menu.Menu position=\"right\">\n          {props.auth?.token ? (\n            <>\n              <Menu.Item>\n                <Header as=\"h4\">Logged in as {props.auth.name}</Header>\n              </Menu.Item>\n              <Menu.Item\n                name=\"logout\"\n                active={true}\n                onClick={handleLogoutClick}\n              />\n            </>\n          ) : (\n            <Button.Group>\n              <Menu.Item>\n                <Button.Group>\n                  <Button positive as=\"a\" href=\"./register\">\n                    Signup\n                  </Button>\n                  <Button.Or />\n                  <Button color=\"blue\" as=\"a\" href=\"./login\">\n                    Login\n                  </Button>\n                </Button.Group>\n              </Menu.Item>\n            </Button.Group>\n          )}\n        </Menu.Menu>\n      </Responsive>\n      <Responsive maxWidth={499} as={Menu}>\n        <NavbarMobile handleLogout={handleLogoutClick} />\n      </Responsive>\n    </>\n  );\n};\n\nexport default Navbar;\n","import { connect } from 'react-redux';\nimport Navbar from './Navbar';\nimport { logout } from '../../../store/auth/authActions';\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToprops = {\n  logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Navbar);\n","import blogService from '../../services/blogs';\nimport loginService from '../../services/login';\nimport { ThunkDispatch, ThunkAction } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { User } from '../../common/types';\nimport { SET_USER, LOGOUT, SET_TOKEN, LOGIN } from './types';\n\nexport const login = (\n  username: string,\n  password: string,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const user = await loginService.login({ username, password });\n    blogService.api.token = user.token;\n    window.localStorage.setItem('loggedUser', JSON.stringify(user));\n    dispatch({\n      type: LOGIN,\n      data: user,\n    });\n  };\n};\nexport const logout = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    window.localStorage.removeItem('loggedUser');\n    blogService.api.token = null;\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n};\nexport const setUser = (\n  user: any,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    blogService.api.token = user?.token;\n    dispatch({\n      type: SET_USER,\n      data: user,\n    });\n  };\n};\nexport const setToken = (\n  token: string,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    blogService.api.token = token;\n    dispatch({\n      type: SET_TOKEN,\n      data: token,\n    });\n  };\n};\n","import { User } from '../../common/types';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USER = 'SET_USER';\n\ninterface LoginAction {\n  type: typeof LOGIN;\n  data: User;\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\ninterface SetTokenAction {\n  type: typeof SET_TOKEN;\n  data: String;\n}\ninterface SetUserAction {\n  type: typeof SET_USER;\n  data: User;\n}\n\nexport interface AuthState {\n  token: String;\n  id: String;\n  username: String;\n  name: String;\n}\n\nexport type AuthActionTypes =\n  | LoginAction\n  | LogoutAction\n  | SetTokenAction\n  | SetUserAction;\n","import { ClearNotificationAction, SetNotificationAction } from \"./types\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nexport const setNotification = (\n  content: string,\n  category: string\n): SetNotificationAction => {\n  return {\n    type: \"SET_NOTIFICATION\",\n    data: {\n      status: true,\n      content,\n      category\n    }\n  };\n};\nexport const clearNotification = (): ClearNotificationAction => {\n  return {\n    type: \"CLEAR_NOTIFICATION\",\n    data: {\n      status: false,\n      content: \"\",\n      category: \"\"\n    }\n  };\n};\n\nexport const setTimedNotification = (\n  content: string,\n  category: string,\n  time: number\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async dispatch => {\n    setNotification(content, category);\n    setTimeout(() => clearNotification, time * 1000);\n  };\n};\n","import React from 'react';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  Snackbar,\n  makeStyles,\n  IconButton,\n  SnackbarContent,\n} from '@material-ui/core';\nimport { amber, green } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport {\n  clearNotification,\n  setTimedNotification,\n} from '../../store/notification/notificationActions';\n\nconst Popup = props => {\n  const useStyles = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  }));\n\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n\n  const classes = useStyles();\n  const Icon = props.notification.category\n    ? variantIcon[props.notification.category]\n    : variantIcon['info'];\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        key={'bottom, center'}\n        open={props.notification.status}\n        onClose={props.clearNotification}\n        autoHideDuration={3000}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n      >\n        <SnackbarContent\n          className={classes[props.notification.category]}\n          aria-describedby=\"client-snackbar\"\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              <Icon className={clsx(classes.icon, classes.iconVariant)} />\n              {props.notification.content}\n            </span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={props.clearNotification}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>,\n          ]}\n        />\n      </Snackbar>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification,\n  };\n};\n\nconst mapDispatchToProps = {\n  clearNotification,\n  setTimedNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n","import React from 'react';\nimport { Form, Grid, Header } from 'semantic-ui-react';\n\nexport default function({\n  username,\n  setUsername,\n  password,\n  setPassword,\n  handleLogin,\n  history,\n  ...props\n}: any) {\n  return (\n    <Grid style={{ height: '80vh' }} verticalAlign=\"middle\" textAlign=\"center\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n          Log-in to your account\n        </Header>\n        <Form onSubmit={handleLogin}>\n          <Form.Input\n            label=\"Username\"\n            value={username}\n            onChange={({ target }: any) => setUsername(target.value)}\n            placeholder=\"Enter username...\"\n          />\n          <Form.Input\n            type=\"password\"\n            label=\"Password\"\n            value={password}\n            onChange={({ target }: any) => setPassword(target.value)}\n            placeholder=\"Enter password...\"\n          />\n          <Form.Button>Login</Form.Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport LoginComponent from './Login';\nimport { login } from '../../store/auth/authActions';\nimport { setNotification } from '../../store/notification/notificationActions';\nimport { useHistory } from 'react-router-dom';\n\nconst Login: React.FC = (props: any) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  let history = useHistory();\n  const handleLogin = (e: any) => {\n    e.preventDefault();\n    try {\n      props.login(username, password);\n      //window.localStorage.setItem(\"loggedUser\", JSON.stringify(props.user));\n      setUsername('');\n      setPassword('');\n      history.push('/');\n    } catch (error) {\n      props.setNotification('error', 'An error has occured.');\n      console.error(error);\n    }\n  };\n\n  return (\n    <LoginComponent\n      username={username}\n      setUsername={setUsername}\n      password={password}\n      setPassword={setPassword}\n      handleLogin={handleLogin}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  login,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n\nconst Box = props => {\n  const useStyles = makeStyles(theme => ({\n    box: {\n      width: props.width,\n      margin: \"0 auto\",\n      paddingTop: \"5.8572em\"\n    }\n  }));\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.box} container alignItems='center' spacing={2}>\n      {props.children}\n    </Grid>\n  );\n};\n\nexport default Box;\n","import React from \"react\";\n\nimport Box from \"../common/Box\";\n\nconst User = ({ user }) => {\n  console.log(user);\n  return (\n    <Box>\n      <h3>User {user.name}</h3>\n      <h4>added blogs: </h4>\n      <ul>\n        {user.blogs.map(blog => (\n          <li key={blog.id}>{blog.title}</li>\n        ))}\n      </ul>\n    </Box>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Route,\n  Redirect,\n  withRouter,\n  RouteProps,\n  RouteComponentProps,\n} from 'react-router-dom';\nimport { AuthState } from '../store/auth/types';\n\ninterface ProtectedRouteProps {\n  auth: AuthState;\n}\n\nconst ProtectedRoute = ({\n  auth,\n  children,\n  ...rest\n}: RouteProps & ProtectedRouteProps): JSX.Element => {\n  console.log(auth);\n  return auth ? <Route {...rest}>{children}</Route> : <Redirect to=\"/\" />;\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nexport default connect<{}, {}, ProtectedRouteProps>(mapStateToProps)(\n  ProtectedRoute,\n) as any;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Card, Icon } from 'semantic-ui-react';\nimport '../styles.scss';\n\nconst BlogCard = ({ blog, history }: any) => {\n  return (\n    <Card\n      className=\"blog card\"\n      onClick={() => history.push(`/blogs/${blog.id}`, blog.id)}\n    >\n      <Card.Content>\n        <Card.Header content={blog.title} />\n        <Card.Meta content={blog.author} />\n        <Card.Description content={blog.description} />\n      </Card.Content>\n      <Card.Content extra>\n        <p>\n          <Icon name=\"like\" />\n          {blog.likes} likes\n        </p>\n        <Icon name=\"comments\" />\n        {blog.comments.length} comments\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default withRouter(BlogCard);\n","import React from 'react';\nimport Box from '../common/Box';\nimport BlogCard from '../blog/Blog/BlogCard';\nimport { Loader, Container, Grid, Header } from 'semantic-ui-react';\nimport FeedHome from '../feed';\n\nconst Home: React.FC = (props: any) => {\n  const Row = ({ blogs }: any) => {\n    return (\n      <>\n        {blogs.map((blog: any) => (\n          <Grid.Column key={blog.id}>\n            <BlogCard key={blog.id} blog={blog} />\n          </Grid.Column>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <Container>\n      {props.pending ? (\n        <Loader />\n      ) : (\n        <>\n          <Grid\n            container\n            divided\n            padded\n            columns=\"equal\"\n            direction=\"column\"\n            justify=\"center\"\n          >\n            <Header as=\"h4\">Most popular</Header>\n            <Grid.Row>\n              <Row blogs={props.blogsMostPopular} />\n            </Grid.Row>\n            <Header as=\"h4\">Recently added</Header>\n            <Grid.Row>\n              <Row blogs={props.blogsRecentlyAdded} />\n            </Grid.Row>\n          </Grid>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Home;\n","import { connect } from 'react-redux';\nimport {\n  getBlogsMostPopular,\n  getBlogsRecentlyAdded,\n} from '../../store/blog/blogActions';\nimport Home from './Home';\n\nconst mapStateToProps = (state: any) => {\n  return {\n    blogsMostPopular: getBlogsMostPopular(state, 3),\n    blogsRecentlyAdded: getBlogsRecentlyAdded(state, 3),\n    pending: state.blogs.pending,\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { Comment } from 'semantic-ui-react';\n\nconst SingleComment = ({ comment, user }: any) => {\n\n  const formattedDate = new Date(Date.parse(comment.date)).toUTCString()\n\n  return (\n    <Comment>\n      <Comment.Avatar src=\"/\" />\n      <Comment.Content>\n        <Comment.Author>{user}</Comment.Author>\n        <Comment.Metadata>\n          <div>{formattedDate}</div>\n          <div>{comment.likes} likes</div>\n        </Comment.Metadata>\n        <Comment.Text>{comment.content}</Comment.Text>\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default SingleComment;\n","export const replaceItem = (item, index, array) => {\n  return [...array.slice(0, index), item, ...array.slice(index + 1)];\n};\n\nexport const replaceItemById = (item, id, array) =>\n  replaceItem(item, array.findIndex(i => i.id === item.id), array);\n\nexport const generateId = () => {\n  return (\n    \"_\" +\n    Math.random()\n      .toString(36)\n      .substr(2, 9)\n  );\n};\n","import React, { useState } from 'react';\nimport { Form, Input, Icon } from 'semantic-ui-react';\n\nexport default function({ comment, setComment, handleSubmit, ...props }: any) {\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.TextArea\n          label=\"Content\"\n          value={comment}\n          onChange={({ target }: any) => setComment(target.value)}\n          placeholder=\"Comment...\"\n        />\n        <Form.Button type=\"submit\">\n          <Icon name=\"plus\" onClick={handleSubmit} />\n        </Form.Button>\n      </Form>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { addComment, getBlogById } from '../../../../store/blog/blogActions';\nimport {\n  setTimedNotification,\n  setNotification,\n} from '../../../../store/notification/notificationActions';\nimport { connect } from 'react-redux';\nimport CommentsNewComponent from './CommentsNew';\nimport { withRouter, useHistory } from 'react-router-dom';\n\nconst CommentsNew = (props: any) => {\n  let history = useHistory();\n  const [err, setErr] = useState(false);\n  const [comment, setComment] = useState('');\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    if (comment.length < 3) {\n      props.setNotification('Too few characters', 'error');\n      setErr(true);\n      setTimeout(() => setErr(false), 3000);\n      return;\n    }\n    const newComment = {\n      content: comment,\n      likes: 0,\n      user: props.user,\n    };\n    setComment('');\n    const blog = getBlogById(props.blogs, history.location.state);\n    props.addComment(blog, newComment);\n    props.setNotification('Comment succesfully added', 'success');\n  };\n\n  return (\n    <CommentsNewComponent\n      comment={comment}\n      setComment={setComment}\n      handleSubmit={handleSubmit}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.auth.username,\n    blogs: state.blogs,\n  };\n};\n\nconst mapDispatchToProps = {\n  addComment,\n  setTimedNotification,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsNew);\n","import React from 'react';\nimport SingleComment from './SingleComment';\nimport { generateId } from '../../../lib/helpers';\nimport CommentsNew from './CommentsNew';\n\nconst Comments = ({ comments }: any) => {\n  const user: any = window.localStorage.getItem('loggedUser') ?? '';\n  let parsedUser: any;\n  if (user) parsedUser = JSON.parse(user);\n  const renderComments = () =>\n    comments.map((comment: any) => (\n      <Comments.Single key={generateId()} comment={comment}></Comments.Single>\n    ));\n  return (\n    <>\n      {renderComments()}\n      {parsedUser ? <Comments.New /> : null}\n    </>\n  );\n};\n\nComments.Single = SingleComment;\nComments.New = CommentsNew;\n\nexport default Comments;\n","import React, { useEffect } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nimport {\n  Grid,\n  Icon,\n  Container,\n  Header,\n  Statistic,\n  Comment,\n  Segment,\n} from 'semantic-ui-react';\nimport Comments from '../../Comments';\n\nconst BlogSingle = ({ blog, full = false, currentUser, ...props }: any) => {\n  let history = useHistory();\n\n  if (!blog) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const formattedDate = new Date(Date.parse(blog.date)).toUTCString();\n\n  return (\n    <Grid verticalAlign=\"middle\" centered textAlign=\"center\">\n      <Grid.Column className=\"blog single\">\n        {full ? (\n          <>\n            <Header as=\"h2\">\n              {blog.title}\n              <Header.Subheader>{blog.author}</Header.Subheader>\n              <Header.Subheader>{formattedDate}</Header.Subheader>\n              <Header as=\"h4\">\n                <em>{blog.description}</em>\n              </Header>\n            </Header>\n            <Container text className=\"blog text\" textAlign=\"justified\">\n              {blog.content}\n            </Container>\n            {currentUser?.token ? (\n              <Icon\n                onClick={() => props.addVote(blog)}\n                name=\"like\"\n                className=\"like\"\n              />\n            ) : (\n              <Icon name=\"like\" className=\"like\" />\n            )}\n            {blog.likes} likes\n            {currentUser?.username === blog.user.username ? (\n              <Icon\n                onClick={() => {\n                  props.deleteBlog(blog.id);\n                  history.push(`/blogs`);\n                }}\n                name=\"delete\"\n                className=\"delete\"\n              ></Icon>\n            ) : (\n              ''\n            )}\n            <Comment.Group>\n              <Header as=\"h4\" dividing>\n                Comments\n              </Header>\n              <Comments comments={blog.comments} />\n            </Comment.Group>\n          </>\n        ) : (\n          <Header\n            as=\"h5\"\n            onClick={() => history.push(`/blogs/${blog.id}`, blog.id)}\n          >\n            {blog.title}\n          </Header>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default BlogSingle;\n","import BlogSingle from './BlogSingle';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { addVote, deleteBlog } from '../../../../store/blog/blogActions';\n\nconst mapDispatchToProps = {\n  addVote,\n  deleteBlog,\n};\n\n//deleted withRouter\nexport default connect(null, mapDispatchToProps)(BlogSingle);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\nconst Settings: React.FC = props => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div>to be done</div>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button}\n        startIcon={<DeleteIcon />}\n      >\n        Delete account\n      </Button>\n    </>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nconst Statistics: React.FC = props => {\n  return <div>to be done</div>;\n};\n\nexport default Statistics;\n","import React, { useState } from 'react';\n//import Edit from './Edit';\nimport Settings from './Settings';\nimport Statistics from './Statistics';\nimport { Tab, Grid, Segment, Image, Header, Loader } from 'semantic-ui-react';\n\nconst Profile = ({ user }: any) => {\n  const panes = [\n    {\n      menuItem: 'Statistics',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Statistics />\n        </Tab.Pane>\n      ),\n    },\n    /*{\n      menuItem: 'Edit',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Edit />\n        </Tab.Pane>\n      ),\n    },*/\n    {\n      menuItem: 'Settings',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Settings />\n        </Tab.Pane>\n      ),\n    },\n  ];\n  return (\n    <>\n      <Segment className=\"info\" vertical>\n        <Grid verticalAlign=\"middle\" stackable container>\n          <Grid.Row>\n            <Grid.Column width={6}>\n              <Image src=\"\" bordered rounded size=\"medium\" floated=\"left\" />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Header as=\"h3\">{user ? user.name : <Loader active />}</Header>\n              <p>User description</p>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={14}>\n              <Tab panes={panes} menu={{ pointing: true }} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </>\n  );\n};\n\nexport default Profile;\n","import { connect } from 'react-redux';\nimport { getCurrentUser } from '../../store/user/userActions';\nimport Profile from './Profile';\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: getCurrentUser(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React, { useState } from 'react';\nimport { Form, Grid, Header, Label } from 'semantic-ui-react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nconst NewBlogForm = ({\n  title,\n  setTitle,\n  content,\n  setContent,\n  description,\n  setDescription,\n  submit,\n  ...props\n}: any) => {\n  return (\n    <Grid style={{ height: '80vh' }} verticalAlign=\"middle\" textAlign=\"center\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n          Add new blog\n        </Header>\n        <Form onSubmit={submit}>\n          <Form.Input\n            fluid\n            label=\"Title\"\n            value={title}\n            onChange={({ target }: any) => setTitle(target.value)}\n          />\n          <Form.Input\n            fluid\n            label=\"Description\"\n            value={description}\n            onChange={({ target }: any) => setDescription(target.value)}\n          />\n          <Form.TextArea\n            label=\"Content\"\n            value={content}\n            onChange={({ target }: any) => setContent(target.value)}\n            placeholder=\"Blog content...\"\n          />\n          <Form.Button>Submit</Form.Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default NewBlogForm;\n","import React, { useState } from 'react';\nimport NewBlogForm from './NewBlogForm';\nimport { connect } from 'react-redux';\nimport { addBlog, initializeBlogs } from '../../../../store/blog/blogActions';\nimport { setNotification } from '../../../../store/notification/notificationActions';\nimport { withRouter } from 'react-router-dom';\nconst BlogNew = (props: any) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState();\n  const [description, setDescription] = useState('');\n\n  const submit = async (e: any) => {\n    e.preventDefault();\n    const newBlog = {\n      title,\n      author: props.user.name,\n      content,\n      description,\n      user: props.user.username,\n    };\n    try {\n      props.addBlog(newBlog, props.history);\n      props.setNotification('Blog succesfully added', 'success');\n    } catch (e) {\n      console.error(e);\n      props.setNotification('An error has occured', 'error');\n    }\n  };\n\n  return (\n    <NewBlogForm\n      title={title}\n      setTitle={setTitle}\n      content={content}\n      setContent={setContent}\n      description={description}\n      setDescription={setDescription}\n      submit={submit}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.auth,\n    blogs: state.blogs.blogs,\n    status: state.blogs.pending,\n  };\n};\n\nconst mapDispatchToProps = {\n  addBlog,\n  setNotification,\n  initializeBlogs,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BlogNew),\n);\n","import React, { useEffect } from 'react';\nimport BlogCard from '../BlogCard';\nimport { Link } from 'react-router-dom';\nimport { Container, Loader, Grid } from 'semantic-ui-react';\nimport './styles.scss';\nimport { generateId } from '../../../../lib/helpers';\n\nconst BlogList = (props: any) => {\n  const blogsComponents = () => {\n    const blogs = props.blogs\n      .map((blog: any) => (\n        <Grid.Row key={generateId()}>\n          <BlogCard key={blog.id} blog={blog} />\n        </Grid.Row>\n      ))\n      .reverse();\n    return <>{blogs}</>;\n  };\n\n  return (\n    <Grid centered verticalAlign=\"middle\" columns={1}>\n      <Grid.Column width={10}>\n        {props.pending ? (\n          <Loader className=\"spinner\" active />\n        ) : (\n          blogsComponents()\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default BlogList;\n","import { initializeBlogs } from '../../../../store/blog/blogActions';\nimport { connect } from 'react-redux';\nimport BlogList from './BlogList';\n\nconst mapStateToProps = (state: any) => {\n  return {\n    blogs: state.blogs.blogs,\n    pending: state.blogs.pending,\n  };\n};\nconst mapDispatchToProps = {\n  initializeBlogs,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogList);\n","import React from 'react';\nimport BlogCard from './BlogCard';\nimport BlogList from './BlogList';\nimport NewBlogForm from './BlogNew';\nimport BlogSingle from './BlogSingle';\nimport { Grid } from 'semantic-ui-react';\n\ninterface BlogComposition {\n  Card: React.FC<any> & any;\n  List: React.FC<any>;\n  New: React.FC<any> & any;\n  Single: React.FC<any> & any;\n}\n\nconst Blog: React.FC & BlogComposition = (props: any) => {\n  return (\n    <Grid container columns=\"equal\" direction=\"row\" justify=\"center\">\n      <Grid.Row columns={3}>\n        <Blog.List />\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nBlog.Card = BlogCard;\nBlog.List = BlogList;\nBlog.New = NewBlogForm;\nBlog.Single = BlogSingle;\n\nexport default Blog;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserById, getCurrentUser } from './store/user/userActions';\nimport { getBlogById } from './store/blog/blogActions';\n\nimport Login from './components/login';\nimport BlogList from './components/blog/Blog/BlogList/';\nimport User from './components/user/User';\nimport ProtectedRoute from './lib/ProtectedRoute';\n\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/home';\nimport BlogSingle from './components/blog/Blog/BlogSingle';\nimport Profile from './components/profile';\nimport NewBlogForm from './components/blog/Blog/BlogNew';\nimport Blog from './components/blog/Blog';\n//import Register from './components/register/Register';\n\nconst Routes = (props: any) => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/blogs\">\n        <Blog />\n      </Route>\n      {/*<Route exact path=\"/register\">\n        <Register />\n  </Route>*/}\n      <ProtectedRoute\n        exact\n        path=\"/users/:id\"\n        render={({ match }: any) => (\n          <User user={getUserById(props.users, match.params.id)} />\n        )}\n      ></ProtectedRoute>\n      <Route\n        exact\n        path=\"/blogs/:id\"\n        render={({ match }) => (\n          <BlogSingle\n            full\n            blog={getBlogById(props.blogs, match.params.id)}\n            currentUser={props.auth}\n          />\n        )}\n      ></Route>\n      <Route exact path=\"/login\">\n        <Login />\n      </Route>\n      <ProtectedRoute exact path=\"/profile\">\n        <Profile />\n      </ProtectedRoute>\n      <ProtectedRoute exact path=\"/new\" render={() => <NewBlogForm />} />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.auth,\n    users: state.users,\n    blogs: state.blogs,\n  };\n};\n\nexport default connect(mapStateToProps)(Routes);\n","import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { setUser } from './store/auth/authActions';\nimport { initializeUsers } from './store/user/userActions';\nimport { initializeBlogs } from './store/blog/blogActions';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Navbar from './components/navbar/Navbar';\nimport Popup from './components/common/Popup';\nimport Routes from './Routes';\nimport blogService from './services/blogs';\n\nconst App = (props: any) => {\n  useEffect(() => {\n    props.initializeBlogs();\n    props.initializeUsers();\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const currentUser = JSON.parse(loggedUserJSON);\n      props.setUser(currentUser);\n    } else props.setUser(null);\n  }, []);\n\n  return (\n    <>\n      <Router basename=\"/bloglist\">\n        <Popup />\n        <Navbar />\n        <Routes />\n      </Router>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  setUser,\n  initializeBlogs,\n  initializeUsers,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { replaceItemById } from '../../lib/helpers';\nimport {\n  BlogState,\n  ADD_BLOG,\n  DELETE_BLOG,\n  UPDATE_BLOG,\n  ADD_VOTE,\n  ADD_COMMENT,\n  INIT_BLOGS_SUCCESS,\n  INIT_BLOGS_PENDING,\n  INIT_BLOGS_FAILURE,\n  BlogActionsType,\n} from './types';\n\nconst initialState: BlogState = {\n  pending: false,\n  error: null,\n  blogs: [],\n};\n\nexport default (state = initialState, action: BlogActionsType) => {\n  switch (action.type) {\n    case ADD_BLOG:\n      return { ...state, blogs: [...state.blogs, action.data] };\n    case DELETE_BLOG:\n      return {\n        ...state,\n        blogs: state.blogs.filter(element => element.id !== action.data.id),\n      };\n    case UPDATE_BLOG:\n      return null;\n    case ADD_VOTE:\n      return {\n        ...state,\n        blogs: replaceItemById(action.data, action.data.id, state.blogs),\n      };\n\n    case ADD_COMMENT:\n      return {\n        ...state,\n        blogs: replaceItemById(action.data, action.data.id, state.blogs),\n      };\n    case INIT_BLOGS_PENDING:\n      return { ...state, pending: true };\n    case INIT_BLOGS_SUCCESS:\n      return { pending: false, blogs: action.data, error: null };\n    case INIT_BLOGS_FAILURE:\n      return { ...state, pending: false, error: action.error };\n    default:\n      return state;\n  }\n};\n","import {\n  NotificationActions,\n  NotificationState,\n  SET_NOTIFICATION,\n  CLEAR_NOTIFICATION\n} from \"./types\";\n\nconst initialState: NotificationState = {\n  status: false,\n  content: \"\",\n  category: \"\"\n};\n\nexport default (state = initialState, action: NotificationActions) => {\n  switch (action.type) {\n    case SET_NOTIFICATION:\n      return action.data;\n    case CLEAR_NOTIFICATION:\n      return action.data;\n    default:\n      return state;\n  }\n};\n","import {\n  AuthState,\n  AuthActionTypes,\n  LOGIN,\n  LOGOUT,\n  SET_USER,\n  SET_TOKEN,\n} from './types';\n\nconst initialState: AuthState | null = {\n  token: '',\n  username: '',\n  id: '',\n  name: '',\n};\n\nexport default (state = initialState, action: AuthActionTypes) => {\n  switch (action.type) {\n    case LOGIN:\n      return action.data;\n    case LOGOUT:\n      return null;\n    case SET_USER:\n      return action.data;\n    case SET_TOKEN:\n      return { ...state, token: action.data };\n    default:\n      return state;\n  }\n};\n","import {\n  INIT_USERS,\n  DELETE_USER,\n  REGISTER_USER,\n  UserActions,\n  UserState\n} from \"./types\";\n\nconst initialState: UserState = [];\n\nexport default (state = initialState, action: UserActions) => {\n  switch (action.type) {\n    case INIT_USERS:\n      return action.data;\n    case DELETE_USER:\n      return [state.filter(element => element.id === action.data.id)];\n    case REGISTER_USER:\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport blogReducer from './blog/blogReducer';\nimport notificationReducer from './notification/notificationReducer';\nimport authReducer from './auth/authReducer';\nimport userReducer from './user/userReducer';\n\nconst reducer = combineReducers({\n  blogs: blogReducer as any,\n  notification: notificationReducer as any,\n  auth: authReducer as any,\n  users: userReducer as any,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","export const SET_NOTIFICATION = \"SET_NOTIFICATION\";\nexport const CLEAR_NOTIFICATION = \"CLEAR_NOTIFICATION\";\n\nexport interface NotificationState {\n  status: boolean;\n  content: string;\n  category: string;\n}\n\nexport interface SetNotificationAction {\n  type: typeof SET_NOTIFICATION;\n  data: {\n    status: boolean;\n    content: string;\n    category: string;\n  };\n}\n\nexport interface ClearNotificationAction {\n  type: typeof CLEAR_NOTIFICATION;\n  data: {\n    status: false;\n    content: \"\";\n    category: \"\";\n  };\n}\n\nexport type NotificationActions =\n  | SetNotificationAction\n  | ClearNotificationAction;\n","import { User } from \"../../common/types\";\n\nexport const INIT_USERS = \"INIT_USERS\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const REGISTER_USER = \"REGISTER_USER\";\n\nexport interface InitUsersAction {\n  type: typeof INIT_USERS;\n  data: User[];\n}\nexport interface DeleteUserAction {\n  type: typeof DELETE_USER;\n  data: { id: string };\n}\nexport interface RegisterUserAction {\n  type: typeof REGISTER_USER;\n  data: User;\n}\n\nexport type UserState = User[];\nexport type UserActions =\n  | InitUsersAction\n  | DeleteUserAction\n  | RegisterUserAction;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst render = () => {\n  ReactDOM.render(\n    <>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\nstore.subscribe(render);\n"],"sourceRoot":""}