{"version":3,"sources":["services/api.ts","services/blogs.ts","services/login.ts","services/users.ts","store/user/userActions.ts","store/blog/blogActions.ts","store/blog/types.ts","components/navbar/DropdownMobile.tsx","components/navbar/Navbar/Navbar.tsx","components/navbar/Navbar/index.tsx","store/auth/authActions.ts","store/notification/notificationActions.ts","components/common/Popup.js","components/login/Login.tsx","components/login/index.tsx","components/common/Box.js","components/user/User.js","lib/ProtectedRoute.tsx","components/blog/Blog/BlogCard/index.tsx","components/home/Home.tsx","components/home/index.tsx","components/blog/Comments/SingleComment.tsx","lib/helpers.js","components/blog/Comments/CommentsNew/CommentsNew.tsx","components/blog/Comments/CommentsNew/index.tsx","components/blog/Comments/index.tsx","components/blog/Blog/BlogSingle/BlogSingle.tsx","components/blog/Blog/BlogSingle/index.tsx","components/profile/Settings.tsx","components/profile/Statistics.tsx","components/profile/Profile.tsx","components/profile/index.tsx","components/blog/Blog/BlogNew/NewBlogForm.tsx","components/blog/Blog/BlogNew/index.tsx","components/blog/Blog/BlogList/BlogList.tsx","components/blog/Blog/BlogList/index.tsx","components/blog/Blog/index.tsx","Routes.tsx","App.tsx","store/blog/blogReducer.ts","store/notification/notificationReducer.ts","store/auth/authReducer.ts","store/user/userReducer.ts","store/store.ts","store/notification/types.ts","store/auth/types.ts","store/user/types.ts","index.tsx"],"names":["Api","baseUrl","token","Object","classCallCheck","this","_baseUrl","_token","_config","concat","id","axios","get","response","data","console","error","_context","t0","object","withAuth","post","_context2","put","_context3","delete","_context4","_context5","credentials","_context6","newToken","headers","Authorization","undefined","blogsApi","services_blogs","getAll","regenerator_default","a","async","prev","next","awrap","abrupt","sent","stop","create","update","remove","comment","api","loginApi","services_login","login","usersApi","services_users","getUserById","state","filter","user","getCurrentUser","users","auth","initializeBlogs","dispatch","blogs","type","log","blogService","getBlogById","blog","getBlogsMostPopular","n","sort","b","likes","reverse","slice","getBlogsRecentlyAdded","DropdownMobile","react_default","createElement","Dropdown","item","icon","simple","Menu","Item","Icon_Icon","name","className","Divider","Header","Navbar","props","_props$auth","Fragment","Responsive","minWidth","as","size","secondary","content","link","href","position","active","onClick","logout","window","location","reload","Button","Group","positive","Or","color","maxWidth","navbar_DropdownMobile","mapDispatchToprops","localStorage","removeItem","connect","setNotification","category","status","clearNotification","setTimedNotification","time","setTimeout","mapDispatchToProps","notification","useStyles","makeStyles","theme","success","backgroundColor","green","palette","dark","info","primary","main","warning","amber","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","classes","Icon","Snackbar","anchorOrigin","vertical","horizontal","key","open","onClose","autoHideDuration","ContentProps","aria-describedby","SnackbarContent","clsx","action","IconButton","aria-label","Close_default","login_Login","_ref","username","setUsername","password","setPassword","handleLogin","history","objectWithoutProperties","Grid","style","height","verticalAlign","textAlign","Column","Form","onSubmit","Input","label","value","onChange","_ref2","target","placeholder","_ref3","loginService","setItem","JSON","stringify","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","useHistory","e","preventDefault","push","Box","box","width","margin","paddingTop","Grid_Grid","container","children","User","common_Box","map","title","rest","react_router","to","withRouter","Card","Content","Meta","author","Description","description","extra","comments","length","Home","blogsMostPopular","Row","Blog_BlogCard","Container","pending","Loader","divided","padded","columns","direction","justify","blogsRecentlyAdded","SingleComment","Comment","Avatar","src","Author","Metadata","date","Text","replaceItemById","array","index","toConsumableArray","replaceItem","findIndex","i","CommentsNew_CommentsNew","setComment","handleSubmit","TextArea","addComment","_blog$comments","newComment","newBlog","objectSpread2","setErr","Comments","_window$localStorage$","parsedUser","getItem","parse","Single","Math","random","toString","substr","New","CommentsNew","BlogSingle","_ref$full","full","currentUser","centered","Subheader","text","addVote","deleteBlog","dividing","blog_Comments","newObject","button","Settings","Button_Button","variant","startIcon","Delete_default","Statistics","Profile","panes","menuItem","render","Tab","Pane","attached","profile_Statistics","profile_Settings","Segment","stackable","Image","bordered","rounded","floated","menu","pointing","NewBlogForm","setTitle","setContent","setDescription","submit","fluid","_ref4","addBlog","_useState5","_useState6","BlogNew_NewBlogForm","BlogList","blogsComponents","Blog","List","BlogCard","exact","path","home","blog_Blog","lib_ProtectedRoute","match","user_User","params","Blog_BlogSingle","components_login","profile","Blog_BlogNew","setUser","initializeUsers","userService","useEffect","loggedUserJSON","react_router_dom","basename","common_Popup","navbar_Navbar","src_Routes","initialState","reducer","combineReducers","arguments","element","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.ac3094da.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nclass Api {\n  private _baseUrl: string;\n  private _token?: string;\n  private _config?: Object;\n  constructor(baseUrl: string, token?: string) {\n    this._baseUrl = baseUrl;\n    this._token = `bearer ${token}`;\n  }\n\n  set token(newToken: string | null) {\n    this._token = `bearer ${newToken}`;\n    this._config = {\n      headers: { Authorization: this._token },\n    };\n  }\n  get token(): string | null {\n    if (this._token !== undefined) return this._token;\n    else return null;\n  }\n\n  async get(id?: string) {\n    let response;\n    try {\n      if (typeof id === 'undefined') {\n        response = await axios.get(this._baseUrl);\n      } else {\n        response = await axios.get(`${this._baseUrl}/${id}`);\n      }\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  async create(object: Object, id?: string, withAuth?: boolean) {\n    let response;\n    try {\n      if (typeof withAuth === 'undefined') {\n        response = await axios.post(this._baseUrl, object);\n      } else {\n        response = await axios.post(this._baseUrl, object, this._config);\n      }\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async update(object: Object, id?: string, withAuth?: boolean) {\n    let response: any;\n    try {\n      if (typeof withAuth === 'undefined') {\n        response = await axios.put(`${this._baseUrl}/${id}`, object);\n      } else {\n        await axios.put(`${this._baseUrl}/${id}`, object, this._config);\n      }\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async remove(id: string, withAuth?: boolean) {\n    let response;\n    try {\n      if (typeof withAuth === 'undefined') {\n        response = await axios.delete(`${this._baseUrl}/${id}`);\n      } else {\n        response = await axios.delete(`${this._baseUrl}/${id}`, this._config);\n      }\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async comment(object: string, id: string) {\n    try {\n      const response = await axios.post(\n        `${this._baseUrl}/${id}/comments`,\n        object,\n        this._config,\n      );\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async login(credentials: Object) {\n    try {\n      const response = await axios.post(this._baseUrl, credentials);\n      return response.data;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nexport default Api;\n","import axios from 'axios';\nimport Api from './api';\nimport { Blog } from '../common/types';\nconst baseUrl = '/bloglist/api/blogs';\n\nconst blogsApi = new Api(baseUrl);\n\nconst getAll = async () => await blogsApi.get();\nconst get = async (id: string) => await blogsApi.get(id);\nconst create = async (object: Blog) =>\n  await blogsApi.create(object, undefined, true);\nconst comment = async (object: string, id: string) =>\n  await blogsApi.comment(object, id);\nconst update = async (object: Blog, id: string) =>\n  await blogsApi.update(object, id);\nconst remove = async (id: string) => {\n  try {\n    await blogsApi.remove(id, true);\n  } catch (e) {\n    console.error(e);\n  }\n};\nexport default {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  comment,\n  api: blogsApi,\n};\n","import axios from 'axios';\nimport Api from './api';\nconst baseUrl = '/bloglist/api/login';\n\nconst loginApi = new Api(baseUrl);\n\nconst login = async (credentials: Object) => await loginApi.login(credentials);\n\nexport default { login };\n","import Api from './api';\nconst baseUrl = '/bloglist/api/users';\n\nconst usersApi = new Api(baseUrl);\n\nconst getAll = async () => await usersApi.get();\nconst create = async (object: Object) => await usersApi.create(object);\n\nexport default { getAll, create };\n","import userService from \"../../services/users\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { User } from \"../../common/types\";\nimport { UserState } from \"./types\";\n\nexport const initializeUsers = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const users = await userService.getAll();\n    dispatch({\n      type: \"INIT_USERS\",\n      data: users\n    });\n  };\n};\n\nexport const registerUser = (\n  user: User\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const registeredUser = await userService.create(user);\n    console.log(registeredUser);\n    dispatch({\n      type: \"REGISTER_USER\",\n      data: registeredUser\n    });\n  };\n};\n\nexport const deleteUser = (\n  user: User\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    // const deletedUser = await userService.delete(user)\n    dispatch({\n      type: \"DELETE_USER\",\n      data: user.id\n    });\n  };\n};\n\n//selectors\nexport const getUserById = (state: UserState, id: string) =>\n  state.filter(user => user.id === id)[0];\n\nexport const getCurrentUser = (state: any) =>\n  getUserById(state.users, state.auth.id);\n","import blogService from '../../services/blogs';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { History } from 'history';\nimport {\n  BlogState,\n  INIT_BLOGS_PENDING,\n  INIT_BLOGS_SUCCESS,\n  INIT_BLOGS_FAILURE,\n  ADD_COMMENT,\n} from './types';\nimport { Blog } from '../../common/types';\n\nexport const addBlog = (\n  content: any,\n  history: History,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const blog = await blogService.create(content);\n    dispatch({\n      type: 'ADD_BLOG',\n      data: blog,\n    });\n    history.push(`/blogs/${blog.id}`, blog.id);\n  };\n};\n\nexport const deleteBlog = (\n  id: string,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    await blogService.remove(id);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: { id },\n    });\n  };\n};\n\nexport const updateBlog = (id: String) => {};\n\nexport const addVote = (\n  blog: Blog,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const newObject = {\n      ...blog,\n      likes: blog.likes + 1,\n    };\n    await blogService.update(newObject, blog.id ? blog.id : '');\n    dispatch({\n      type: 'ADD_VOTE',\n      data: newObject,\n    });\n  };\n};\n\nexport const addComment = (\n  blog: Blog,\n  comment: string,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const newComment = await blogService.comment(\n      comment,\n      blog.id ? blog.id : '',\n    );\n    const newBlog = { ...blog, comments: blog?.comments?.concat(newComment) };\n    dispatch({\n      type: ADD_COMMENT,\n      data: newBlog,\n    });\n  };\n};\n\n/*ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n>*/\n\nexport const initializeBlogs = (): any => {\n  return async (dispatch: any): Promise<any> => {\n    dispatch({\n      type: INIT_BLOGS_PENDING,\n    });\n    try {\n      console.log('initializeBlogs');\n      const blogs = await blogService.getAll();\n      dispatch({\n        type: INIT_BLOGS_SUCCESS,\n        data: blogs,\n      });\n    } catch (e) {\n      dispatch({\n        type: INIT_BLOGS_FAILURE,\n        error: e,\n      });\n    }\n  };\n};\n\n//selectors\n\nexport const getBlogById = (state: any, id: string) =>\n  state.blogs.filter((blog: Blog) => blog.id === id)[0];\n\nexport const getBlogsMostPopular = (state: any, n: number) => {\n  return state.blogs.blogs\n    .sort((a: Blog, b: Blog) => a.likes - b.likes)\n    .reverse()\n    .slice(0, n);\n};\n\nexport const getBlogsRecentlyAdded = (state: any, n: number) => {\n  return state.blogs.blogs.reverse().slice(0, n);\n};\n","import { Blog } from '../../common/types';\n\nexport const ADD_BLOG = 'ADD_BLOG';\nexport const DELETE_BLOG = 'DELETE_BLOG';\nexport const UPDATE_BLOG = 'UPDATE_BLOG';\nexport const ADD_VOTE = 'ADD_VOTE';\nexport const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const INIT_BLOGS_PENDING = 'INIT_BLOGS_PENDING';\nexport const INIT_BLOGS_SUCCESS = 'INIT_BLOGS_SUCCESS';\nexport const INIT_BLOGS_FAILURE = 'INIT_BLOGS_FAILURE';\n\ninterface AddBlogAction {\n  type: typeof ADD_BLOG;\n  data: Blog;\n}\n\ninterface DeleteBlogAction {\n  type: typeof DELETE_BLOG;\n  data: Blog;\n}\n\ninterface AddVoteAction {\n  type: typeof ADD_VOTE;\n  data: Blog;\n}\n\ninterface UpdateBlogAction {\n  type: typeof UPDATE_BLOG;\n  data: Blog;\n}\n\ninterface AddCommentAction {\n  type: typeof ADD_COMMENT;\n  data: Blog;\n}\n\ninterface InitializeBlogsAction {\n  type:\n    | typeof INIT_BLOGS_PENDING\n    | typeof INIT_BLOGS_FAILURE\n    | typeof INIT_BLOGS_SUCCESS;\n  data: Blog[];\n  error: Error;\n}\n\nexport interface BlogState {\n  pending: boolean;\n  blogs: Blog[];\n  error: Error | null;\n}\n\nexport type BlogActionsType =\n  | AddBlogAction\n  | UpdateBlogAction\n  | DeleteBlogAction\n  | AddVoteAction\n  | AddCommentAction\n  | InitializeBlogsAction;\n","import React from 'react';\nimport { Menu, Dropdown, Icon } from 'semantic-ui-react';\n\nconst DropdownMobile: React.FC = () => {\n  return (\n    <Dropdown item icon=\"bars\" simple>\n      <Dropdown.Menu>\n        <Dropdown.Item>\n          <Icon name=\"dropdown\" />\n          <span className=\"text\">New</span>\n          <Dropdown.Menu>\n            <Dropdown.Item>Document</Dropdown.Item>\n            <Dropdown.Item>Image</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown.Item>\n        <Dropdown.Item>Open</Dropdown.Item>\n        <Dropdown.Item>Save...</Dropdown.Item>\n        <Dropdown.Item>Edit Permissions</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Header>Export</Dropdown.Header>\n        <Dropdown.Item>Share</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default DropdownMobile;\n","import React, { useState, MouseEvent } from 'react';\nimport {\n  Menu,\n  Dropdown,\n  Icon,\n  Responsive,\n  Header,\n  Button,\n} from 'semantic-ui-react';\nimport DropdownMobile from '../DropdownMobile';\nimport { AuthState } from '../../../store/auth/types';\nimport './Navbar.scss';\nimport { useHistory } from 'react-router-dom';\n\ninterface INavbarProps {\n  auth?: AuthState;\n  logout?: any;\n}\n\nconst Navbar: React.FC<INavbarProps> = props => {\n  const handleLogoutClick = () => {\n    props.logout();\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <Responsive\n        minWidth={500}\n        as={Menu}\n        size=\"large\"\n        secondary\n        className=\"navbar\"\n      >\n        <Menu.Item name=\"/\" content=\"Home\" link href=\"/bloglist\" />\n        <Menu.Item name=\"/blogs\" content=\"Blogs\" link href=\"/bloglist/blogs\" />\n        <Menu.Item\n          name=\"/profile\"\n          content=\"Profile\"\n          link\n          href=\"/bloglist/profile\"\n        />\n        <Menu.Item name=\"/new\" content=\"New\" link href=\"/bloglist/new\" />\n        <Menu.Menu position=\"right\">\n          {props.auth?.token ? (\n            <>\n              <Menu.Item>\n                <Header as=\"h4\">Logged in as {props.auth.name}</Header>\n              </Menu.Item>\n              <Menu.Item\n                name=\"logout\"\n                active={true}\n                onClick={handleLogoutClick}\n              />\n            </>\n          ) : (\n            <Button.Group>\n              <Menu.Item>\n                <Button.Group>\n                  <Button positive as=\"a\" href=\"./register\">\n                    Signup\n                  </Button>\n                  <Button.Or />\n                  <Button color=\"blue\" as=\"a\" href=\"./login\">\n                    Login\n                  </Button>\n                </Button.Group>\n              </Menu.Item>\n            </Button.Group>\n          )}\n        </Menu.Menu>\n      </Responsive>\n      <Responsive maxWidth={499} as={Menu}>\n        <DropdownMobile />\n      </Responsive>\n    </>\n  );\n};\n\nexport default Navbar;\n","import { connect } from 'react-redux';\nimport Navbar from './Navbar';\nimport { logout } from '../../../store/auth/authActions';\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToprops = {\n  logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Navbar);\n","import blogService from '../../services/blogs';\nimport loginService from '../../services/login';\nimport { ThunkDispatch, ThunkAction } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { User } from '../../common/types';\n\nexport const login = (\n  username: string,\n  password: string,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    const user = await loginService.login({ username, password });\n    blogService.api.token = user.token;\n    window.localStorage.setItem('loggedUser', JSON.stringify(user));\n    dispatch({\n      type: 'LOGIN',\n      data: user,\n    });\n  };\n};\nexport const logout = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    window.localStorage.removeItem('loggedUser');\n    blogService.api.token = null;\n    dispatch({\n      type: 'LOGOUT',\n    });\n  };\n};\nexport const setUser = (\n  user: any,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    blogService.api.token = user.token;\n    dispatch({\n      type: 'SET_USER',\n      data: user,\n    });\n  };\n};\nexport const setToken = (\n  token: string,\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    blogService.api.token = token;\n    dispatch({\n      type: 'SET_TOKEN',\n      data: token,\n    });\n  };\n};\n","import { ClearNotificationAction, SetNotificationAction } from \"./types\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nexport const setNotification = (\n  content: string,\n  category: string\n): SetNotificationAction => {\n  return {\n    type: \"SET_NOTIFICATION\",\n    data: {\n      status: true,\n      content,\n      category\n    }\n  };\n};\nexport const clearNotification = (): ClearNotificationAction => {\n  return {\n    type: \"CLEAR_NOTIFICATION\",\n    data: {\n      status: false,\n      content: \"\",\n      category: \"\"\n    }\n  };\n};\n\nexport const setTimedNotification = (\n  content: string,\n  category: string,\n  time: number\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async dispatch => {\n    setNotification(content, category);\n    setTimeout(() => clearNotification, time * 1000);\n  };\n};\n","import React from 'react';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  Snackbar,\n  makeStyles,\n  IconButton,\n  SnackbarContent,\n} from '@material-ui/core';\nimport { amber, green } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport {\n  clearNotification,\n  setTimedNotification,\n} from '../../store/notification/notificationActions';\n\nconst Popup = props => {\n  const useStyles = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  }));\n\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n\n  const classes = useStyles();\n  const Icon = props.notification.category\n    ? variantIcon[props.notification.category]\n    : variantIcon['info'];\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        key={'bottom, center'}\n        open={props.notification.status}\n        onClose={props.clearNotification}\n        autoHideDuration={3000}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n      >\n        <SnackbarContent\n          className={classes[props.notification.category]}\n          aria-describedby=\"client-snackbar\"\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              <Icon className={clsx(classes.icon, classes.iconVariant)} />\n              {props.notification.content}\n            </span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={props.clearNotification}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>,\n          ]}\n        />\n      </Snackbar>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification,\n  };\n};\n\nconst mapDispatchToProps = {\n  clearNotification,\n  setTimedNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n","import React from 'react';\nimport { Form, Grid, Header } from 'semantic-ui-react';\n\nexport default function({\n  username,\n  setUsername,\n  password,\n  setPassword,\n  handleLogin,\n  history,\n  ...props\n}: any) {\n  return (\n    <Grid style={{ height: '80vh' }} verticalAlign=\"middle\" textAlign=\"center\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n          Log-in to your account\n        </Header>\n        <Form onSubmit={handleLogin}>\n          <Form.Input\n            label=\"Username\"\n            value={username}\n            onChange={({ target }: any) => setUsername(target.value)}\n            placeholder=\"Enter username...\"\n          />\n          <Form.Input\n            type=\"password\"\n            label=\"Password\"\n            value={password}\n            onChange={({ target }: any) => setPassword(target.value)}\n            placeholder=\"Enter password...\"\n          />\n          <Form.Button>Login</Form.Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport LoginComponent from './Login';\nimport { login } from '../../store/auth/authActions';\nimport { setNotification } from '../../store/notification/notificationActions';\nimport { useHistory } from 'react-router-dom';\n\nconst Login: React.FC = (props: any) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  let history = useHistory();\n  const handleLogin = (e: any) => {\n    e.preventDefault();\n    try {\n      props.login(username, password);\n      //window.localStorage.setItem(\"loggedUser\", JSON.stringify(props.user));\n      setUsername('');\n      setPassword('');\n      history.push('/');\n    } catch (error) {\n      props.setNotification('error', 'An error has occured.');\n      console.error(error);\n    }\n  };\n\n  return (\n    <LoginComponent\n      username={username}\n      setUsername={setUsername}\n      password={password}\n      setPassword={setPassword}\n      handleLogin={handleLogin}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  login,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n\nconst Box = props => {\n  const useStyles = makeStyles(theme => ({\n    box: {\n      width: props.width,\n      margin: \"0 auto\",\n      paddingTop: \"5.8572em\"\n    }\n  }));\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.box} container alignItems='center' spacing={2}>\n      {props.children}\n    </Grid>\n  );\n};\n\nexport default Box;\n","import React from \"react\";\n\nimport Box from \"../common/Box\";\n\nconst User = ({ user }) => {\n  console.log(user);\n  return (\n    <Box>\n      <h3>User {user.name}</h3>\n      <h4>added blogs: </h4>\n      <ul>\n        {user.blogs.map(blog => (\n          <li key={blog.id}>{blog.title}</li>\n        ))}\n      </ul>\n    </Box>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Route,\n  Redirect,\n  withRouter,\n  RouteProps,\n  RouteComponentProps,\n} from 'react-router-dom';\nimport { AuthState } from '../store/auth/types';\n\ninterface ProtectedRouteProps {\n  auth: AuthState;\n}\n\nconst ProtectedRoute = ({\n  auth,\n  children,\n  ...rest\n}: RouteProps & ProtectedRouteProps): JSX.Element => {\n  return auth ? <Route {...rest}>{children}</Route> : <Redirect to=\"/\" />;\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.auth,\n  };\n};\n\n//deleted withRouter before\n\nexport default connect<{}, {}, ProtectedRouteProps>(mapStateToProps)(\n  ProtectedRoute,\n) as any;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Card, Icon } from 'semantic-ui-react';\nimport '../styles.scss';\n\nconst BlogCard = ({ blog, history }: any) => {\n  return (\n    <Card\n      className=\"blog card\"\n      onClick={() => history.push(`/blogs/${blog.id}`, blog.id)}\n    >\n      <Card.Content>\n        <Card.Header content={blog.title} />\n        <Card.Meta content={blog.author} />\n        <Card.Description content={blog.description} />\n      </Card.Content>\n      <Card.Content extra>\n        <p>\n          <a>\n            <Icon name=\"like\" />\n            {blog.likes} likes\n          </a>\n        </p>\n        <a>\n          <Icon name=\"comments\" />\n          {blog.comments.length} comments\n        </a>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default withRouter(BlogCard);\n","import React from 'react';\nimport Box from '../common/Box';\nimport BlogCard from '../blog/Blog/BlogCard';\nimport {\n  Loader,\n  Container,\n  Grid,\n  Header,\n  Divider,\n  Segment,\n  Rail,\n} from 'semantic-ui-react';\nimport FeedHome from '../feed';\n\nconst Home: React.FC = (props: any) => {\n  console.log(props.blogsMostPopular);\n  const Row = ({ blogs }: any) => {\n    return (\n      <>\n        {blogs.map((blog: any) => (\n          <Grid.Column key={blog.id} item>\n            <BlogCard key={blog.id} blog={blog} />\n          </Grid.Column>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <Container>\n      {props.pending ? (\n        <Loader />\n      ) : (\n        <>\n          <Grid\n            container\n            divided\n            padded\n            columns=\"equal\"\n            direction=\"column\"\n            justify=\"center\"\n          >\n            <Header as=\"h4\">Most popular</Header>\n            <Grid.Row>\n              <Row blogs={props.blogsMostPopular} />\n            </Grid.Row>\n            <Header as=\"h4\">Recently added</Header>\n            <Grid.Row>\n              <Row blogs={props.blogsRecentlyAdded} />\n            </Grid.Row>\n          </Grid>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Home;\n","import { connect } from 'react-redux';\nimport {\n  getBlogsMostPopular,\n  getBlogsRecentlyAdded,\n} from '../../store/blog/blogActions';\nimport Home from './Home';\n\nconst mapStateToProps = (state: any) => {\n  return {\n    blogsMostPopular: getBlogsMostPopular(state, 3),\n    blogsRecentlyAdded: getBlogsRecentlyAdded(state, 3),\n    pending: state.blogs.pending,\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { Comment } from 'semantic-ui-react';\n\nconst SingleComment = ({ comment, user }: any) => {\n  return (\n    <Comment>\n      <Comment.Avatar src=\"/\" />\n      <Comment.Content>\n        <Comment.Author>{user}</Comment.Author>\n        <Comment.Metadata>\n          <div>{comment.date}</div>\n          <div>{comment.likes} likes</div>\n        </Comment.Metadata>\n        <Comment.Text>{comment.content}</Comment.Text>\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default SingleComment;\n","export const replaceItem = (item, index, array) => {\n  return [...array.slice(0, index), item, ...array.slice(index + 1)];\n};\n\nexport const replaceItemById = (item, id, array) =>\n  replaceItem(item, array.findIndex(i => i.id === item.id), array);\n\nexport const generateId = () => {\n  return (\n    \"_\" +\n    Math.random()\n      .toString(36)\n      .substr(2, 9)\n  );\n};\n","import React, { useState } from 'react';\nimport { Form, Input, Icon } from 'semantic-ui-react';\n\nexport default function({ comment, setComment, handleSubmit, ...props }: any) {\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.TextArea\n          label=\"Content\"\n          value={comment}\n          onChange={({ target }: any) => setComment(target.value)}\n          placeholder=\"Comment...\"\n        />\n        <Form.Button type=\"submit\">\n          <Icon name=\"plus\" onClick={handleSubmit} />\n        </Form.Button>\n      </Form>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { addComment, getBlogById } from '../../../../store/blog/blogActions';\nimport {\n  setTimedNotification,\n  setNotification,\n} from '../../../../store/notification/notificationActions';\nimport { connect } from 'react-redux';\nimport CommentsNewComponent from './CommentsNew';\nimport { withRouter, useHistory } from 'react-router-dom';\n\nconst CommentsNew = (props: any) => {\n  let history = useHistory();\n  const [err, setErr] = useState(false);\n  const [comment, setComment] = useState('');\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    if (comment.length < 3) {\n      props.setNotification('Too few characters', 'error');\n      setErr(true);\n      setTimeout(() => setErr(false), 3000);\n      return;\n    }\n    const newComment = {\n      content: comment,\n      likes: 0,\n      user: props.user,\n    };\n    setComment('');\n    const blog = getBlogById(props.blogs, history.location.state);\n    props.addComment(blog, newComment);\n    props.setNotification('Comment succesfully added', 'success');\n  };\n\n  return (\n    <CommentsNewComponent\n      comment={comment}\n      setComment={setComment}\n      handleSubmit={handleSubmit}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.auth.username,\n    blogs: state.blogs,\n  };\n};\n\nconst mapDispatchToProps = {\n  addComment,\n  setTimedNotification,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsNew);\n","import React from 'react';\nimport SingleComment from './SingleComment';\nimport { generateId } from '../../../lib/helpers';\nimport CommentsNew from './CommentsNew';\n\nconst Comments = ({ comments }: any) => {\n  const user: any = window.localStorage.getItem('loggedUser') ?? '';\n  let parsedUser: any;\n  if (user) parsedUser = JSON.parse(user);\n  const renderComments = () =>\n    comments.map((comment: any) => (\n      <Comments.Single key={generateId()} comment={comment}></Comments.Single>\n    ));\n  return (\n    <>\n      {renderComments()}\n      {parsedUser ? <Comments.New /> : null}\n    </>\n  );\n};\n\nComments.Single = SingleComment;\nComments.New = CommentsNew;\n\nexport default Comments;\n","import React, { useEffect } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nimport {\n  Grid,\n  Icon,\n  Container,\n  Header,\n  Statistic,\n  Comment,\n  Segment,\n} from 'semantic-ui-react';\nimport Comments from '../../Comments';\n\nconst BlogSingle = ({ blog, full = false, currentUser, ...props }: any) => {\n  let history = useHistory();\n\n  if (!blog) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid verticalAlign=\"middle\" centered textAlign=\"center\">\n      <Grid.Column className=\"blog single\">\n        {full ? (\n          <>\n            <Header as=\"h2\">\n              {blog.title}\n              <Header.Subheader>{blog.author}</Header.Subheader>\n              <Header as=\"h4\">\n                <em>{blog.description}</em>\n              </Header>\n            </Header>\n            <Container text className=\"blog text\" textAlign=\"justified\">\n              {blog.content}\n            </Container>\n            {currentUser.token ? (\n              <Icon\n                onClick={() => props.addVote(blog)}\n                name=\"like\"\n                className=\"like\"\n              />\n            ) : null}\n            {blog.likes} likes\n            {currentUser.username === blog.user.username ? (\n              <Icon\n                onClick={() => {\n                  props.deleteBlog(blog.id);\n                  history.push(`/blogs`);\n                }}\n                name=\"delete\"\n                className=\"delete\"\n              ></Icon>\n            ) : (\n              ''\n            )}\n            <Comment.Group>\n              <Header as=\"h4\" dividing>\n                Comments\n              </Header>\n              <Comments comments={blog.comments} />\n            </Comment.Group>\n          </>\n        ) : (\n          <Header\n            as=\"h5\"\n            onClick={() => history.push(`/blogs/${blog.id}`, blog.id)}\n          >\n            {blog.title}\n          </Header>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default BlogSingle;\n","import BlogSingle from './BlogSingle';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { addVote, deleteBlog } from '../../../../store/blog/blogActions';\n\nconst mapDispatchToProps = {\n  addVote,\n  deleteBlog,\n};\n\n//deleted withRouter\nexport default connect(null, mapDispatchToProps)(BlogSingle);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nconst Settings: React.FC = props => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      variant='contained'\n      color='secondary'\n      className={classes.button}\n      startIcon={<DeleteIcon />}>\n      Delete account\n    </Button>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\n\nconst Statistics: React.FC = props => {\n  return <div>lul</div>;\n};\n\nexport default Statistics;\n","import React, { useState } from 'react';\n//import Edit from './Edit';\nimport Settings from './Settings';\nimport Statistics from './Statistics';\nimport { Tab, Grid, Segment, Image, Header, Loader } from 'semantic-ui-react';\n\nconst Profile = ({ user }: any) => {\n  const panes = [\n    {\n      menuItem: 'Statistics',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Statistics />\n        </Tab.Pane>\n      ),\n    },\n    /*{\n      menuItem: 'Edit',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Edit />\n        </Tab.Pane>\n      ),\n    },*/\n    {\n      menuItem: 'Settings',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Settings />\n        </Tab.Pane>\n      ),\n    },\n  ];\n  return (\n    <>\n      <Segment className=\"info\" vertical>\n        <Grid verticalAlign=\"middle\" stackable container>\n          <Grid.Row>\n            <Grid.Column width={6}>\n              <Image src=\"\" bordered rounded size=\"medium\" floated=\"left\" />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Header as=\"h3\">{user ? user.name : <Loader active />}</Header>\n              <p>User description</p>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={14}>\n              <Tab panes={panes} menu={{ pointing: true }} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </>\n  );\n};\n\nexport default Profile;\n","import { connect } from 'react-redux';\nimport { getCurrentUser } from '../../store/user/userActions';\nimport Profile from './Profile';\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: getCurrentUser(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React, { useState } from 'react';\nimport { Form, Grid, Header, Label } from 'semantic-ui-react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nconst NewBlogForm = ({\n  title,\n  setTitle,\n  content,\n  setContent,\n  description,\n  setDescription,\n  submit,\n  ...props\n}: any) => {\n  return (\n    <Grid style={{ height: '80vh' }} verticalAlign=\"middle\" textAlign=\"center\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n          Add new blog\n        </Header>\n        <Form onSubmit={submit}>\n          <Form.Input\n            fluid\n            label=\"Title\"\n            value={title}\n            onChange={({ target }: any) => setTitle(target.value)}\n          />\n          <Form.Input\n            fluid\n            label=\"Description\"\n            value={description}\n            onChange={({ target }: any) => setDescription(target.value)}\n          />\n          <Form.TextArea\n            label=\"Content\"\n            value={content}\n            onChange={({ target }: any) => setContent(target.value)}\n            placeholder=\"Blog content...\"\n          />\n          <Form.Button>Submit</Form.Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default NewBlogForm;\n","import React, { useState } from 'react';\nimport NewBlogForm from './NewBlogForm';\nimport { connect } from 'react-redux';\nimport { addBlog, initializeBlogs } from '../../../../store/blog/blogActions';\nimport { setNotification } from '../../../../store/notification/notificationActions';\nimport { withRouter } from 'react-router-dom';\nconst BlogNew = (props: any) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState();\n  const [description, setDescription] = useState('');\n\n  const submit = async (e: any) => {\n    e.preventDefault();\n    const newBlog = {\n      title,\n      author: props.user.name,\n      content,\n      description,\n      user: props.user.username,\n    };\n    try {\n      props.addBlog(newBlog, props.history);\n      props.setNotification('Blog succesfully added', 'success');\n    } catch (e) {\n      console.error(e);\n      props.setNotification('An error has occured', 'error');\n    }\n  };\n\n  return (\n    <NewBlogForm\n      title={title}\n      setTitle={setTitle}\n      content={content}\n      setContent={setContent}\n      description={description}\n      setDescription={setDescription}\n      submit={submit}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.auth,\n    blogs: state.blogs.blogs,\n    status: state.blogs.pending,\n  };\n};\n\nconst mapDispatchToProps = {\n  addBlog,\n  setNotification,\n  initializeBlogs,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BlogNew),\n);\n","import React, { useEffect } from 'react';\nimport BlogCard from '../BlogCard';\nimport { Link } from 'react-router-dom';\nimport { Container, Loader, Grid } from 'semantic-ui-react';\nimport './styles.scss';\n\nconst BlogList = (props: any) => {\n  const blogsComponents = () => {\n    const blogs = props.blogs\n      .map((blog: any) => (\n        <Grid.Row>\n          <BlogCard key={blog.id} blog={blog} />\n        </Grid.Row>\n      ))\n      .reverse();\n    return <>{blogs}</>;\n  };\n\n  return (\n    <Grid centered verticalAlign=\"middle\" columns={1}>\n      <Grid.Column width={10}>\n        {props.pending ? <Loader active /> : blogsComponents()}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default BlogList;\n","import { initializeBlogs } from '../../../../store/blog/blogActions';\nimport { connect } from 'react-redux';\nimport BlogList from './BlogList';\n\nconst mapStateToProps = (state: any) => {\n  return {\n    blogs: state.blogs.blogs,\n    pending: state.blogs.pending,\n  };\n};\nconst mapDispatchToProps = {\n  initializeBlogs,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogList);\n","import React from 'react';\nimport BlogCard from './BlogCard';\nimport BlogList from './BlogList';\nimport NewBlogForm from './BlogNew';\nimport BlogSingle from './BlogSingle';\nimport { Grid } from 'semantic-ui-react';\n\ninterface BlogComposition {\n  Card: React.FC<any> & any;\n  List: React.FC<any>;\n  New: React.FC<any> & any;\n  Single: React.FC<any> & any;\n}\n\nconst Blog: React.FC & BlogComposition = (props: any) => {\n  return (\n    <Grid container columns=\"equal\" direction=\"row\" justify=\"center\">\n      <Grid.Row columns={3}>\n        <Blog.List />\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nBlog.Card = BlogCard;\nBlog.List = BlogList;\nBlog.New = NewBlogForm;\nBlog.Single = BlogSingle;\n\nexport default Blog;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserById, getCurrentUser } from './store/user/userActions';\nimport { getBlogById } from './store/blog/blogActions';\n\nimport Login from './components/login';\nimport BlogList from './components/blog/Blog/BlogList/';\nimport User from './components/user/User';\nimport ProtectedRoute from './lib/ProtectedRoute';\n\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/home';\nimport BlogSingle from './components/blog/Blog/BlogSingle';\nimport Profile from './components/profile';\nimport NewBlogForm from './components/blog/Blog/BlogNew';\nimport Blog from './components/blog/Blog';\n//import Register from './components/register/Register';\n\nconst Routes = (props: any) => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/blogs\">\n        <Blog />\n      </Route>\n      {/*<Route exact path=\"/register\">\n        <Register />\n  </Route>*/}\n      <ProtectedRoute\n        exact\n        path=\"/users/:id\"\n        render={({ match }: any) => (\n          <User user={getUserById(props.users, match.params.id)} />\n        )}\n      ></ProtectedRoute>\n      <Route\n        exact\n        path=\"/blogs/:id\"\n        render={({ match }) => (\n          <BlogSingle\n            full\n            blog={getBlogById(props.blogs, match.params.id)}\n            currentUser={props.auth}\n          />\n        )}\n      ></Route>\n      <Route exact path=\"/login\">\n        <Login />\n      </Route>\n      <ProtectedRoute exact path=\"/profile\">\n        <Profile />\n      </ProtectedRoute>\n      <ProtectedRoute exact path=\"/new\" render={() => <NewBlogForm />} />\n    </Switch>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.auth,\n    users: state.users,\n    blogs: state.blogs,\n  };\n};\n\nexport default connect(mapStateToProps)(Routes);\n","import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { setUser } from './store/auth/authActions';\nimport { initializeUsers } from './store/user/userActions';\nimport { initializeBlogs } from './store/blog/blogActions';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Navbar from './components/navbar/Navbar';\nimport Popup from './components/common/Popup';\nimport Routes from './Routes';\nimport blogService from './services/blogs';\n\nconst App = (props: any) => {\n  useEffect(() => {\n    props.initializeBlogs();\n    props.initializeUsers();\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const currentUser = JSON.parse(loggedUserJSON);\n      props.setUser(currentUser);\n    } else props.setUser({});\n  }, []);\n\n  return (\n    <>\n      <Router basename=\"/bloglist\">\n        <Popup />\n        <Navbar />\n        <Routes />\n      </Router>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  setUser,\n  initializeBlogs,\n  initializeUsers,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { replaceItemById } from '../../lib/helpers';\nimport {\n  BlogState,\n  ADD_BLOG,\n  DELETE_BLOG,\n  UPDATE_BLOG,\n  ADD_VOTE,\n  ADD_COMMENT,\n  INIT_BLOGS_SUCCESS,\n  INIT_BLOGS_PENDING,\n  INIT_BLOGS_FAILURE,\n  BlogActionsType,\n} from './types';\n\nconst initialState: BlogState = {\n  pending: false,\n  error: null,\n  blogs: [],\n};\n\nexport default (state = initialState, action: BlogActionsType) => {\n  switch (action.type) {\n    case ADD_BLOG:\n      return { ...state, blogs: [...state.blogs, action.data] };\n    case DELETE_BLOG:\n      return {\n        ...state,\n        blogs: state.blogs.filter(element => element.id !== action.data.id),\n      };\n    case UPDATE_BLOG:\n      return null;\n    case ADD_VOTE:\n      return {\n        ...state,\n        blogs: replaceItemById(action.data, action.data.id, state.blogs),\n      };\n\n    case ADD_COMMENT:\n      return {\n        ...state,\n        blogs: replaceItemById(action.data, action.data.id, state.blogs),\n      };\n    case INIT_BLOGS_PENDING:\n      return { ...state, pending: true };\n    case INIT_BLOGS_SUCCESS:\n      return { pending: false, blogs: action.data, error: null };\n    case INIT_BLOGS_FAILURE:\n      return { ...state, pending: false, error: action.error };\n    default:\n      return state;\n  }\n};\n","import {\n  NotificationActions,\n  NotificationState,\n  SET_NOTIFICATION,\n  CLEAR_NOTIFICATION\n} from \"./types\";\n\nconst initialState: NotificationState = {\n  status: false,\n  content: \"\",\n  category: \"\"\n};\n\nexport default (state = initialState, action: NotificationActions) => {\n  switch (action.type) {\n    case SET_NOTIFICATION:\n      return action.data;\n    case CLEAR_NOTIFICATION:\n      return action.data;\n    default:\n      return state;\n  }\n};\n","import {\n  AuthState,\n  AuthActionTypes,\n  LOGIN,\n  LOGOUT,\n  SET_USER,\n  SET_TOKEN,\n} from './types';\n\nconst initialState: AuthState = {\n  token: '',\n  username: '',\n  id: '',\n  name: '',\n};\n\nexport default (state = initialState, action: AuthActionTypes) => {\n  switch (action.type) {\n    case LOGIN:\n      return action.data;\n    case LOGOUT:\n      return null;\n    case SET_USER:\n      return action.data;\n    case SET_TOKEN:\n      return { ...state, token: action.data };\n    default:\n      return state;\n  }\n};\n","import {\n  INIT_USERS,\n  DELETE_USER,\n  REGISTER_USER,\n  UserActions,\n  UserState\n} from \"./types\";\n\nconst initialState: UserState = [];\n\nexport default (state = initialState, action: UserActions) => {\n  switch (action.type) {\n    case INIT_USERS:\n      return action.data;\n    case DELETE_USER:\n      return [state.filter(element => element.id === action.data.id)];\n    case REGISTER_USER:\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport blogReducer from './blog/blogReducer';\nimport notificationReducer from './notification/notificationReducer';\nimport authReducer from './auth/authReducer';\nimport userReducer from './user/userReducer';\n\nconst reducer = combineReducers({\n  blogs: blogReducer as any,\n  notification: notificationReducer as any,\n  auth: authReducer as any,\n  users: userReducer as any,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","export const SET_NOTIFICATION = \"SET_NOTIFICATION\";\nexport const CLEAR_NOTIFICATION = \"CLEAR_NOTIFICATION\";\n\nexport interface NotificationState {\n  status: boolean;\n  content: string;\n  category: string;\n}\n\nexport interface SetNotificationAction {\n  type: typeof SET_NOTIFICATION;\n  data: {\n    status: boolean;\n    content: string;\n    category: string;\n  };\n}\n\nexport interface ClearNotificationAction {\n  type: typeof CLEAR_NOTIFICATION;\n  data: {\n    status: false;\n    content: \"\";\n    category: \"\";\n  };\n}\n\nexport type NotificationActions =\n  | SetNotificationAction\n  | ClearNotificationAction;\n","import { User } from '../../common/types';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USER = 'SET_USER';\n\ninterface LoginAction {\n  type: typeof LOGIN;\n  data: User;\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\ninterface SetTokenAction {\n  type: typeof SET_TOKEN;\n  data: String;\n}\ninterface SetUserAction {\n  type: typeof SET_USER;\n  data: User;\n}\n\nexport interface AuthState {\n  token: String;\n  id: String;\n  username: String;\n  name: String;\n}\n\nexport type AuthActionTypes =\n  | LoginAction\n  | LogoutAction\n  | SetTokenAction\n  | SetUserAction;\n","import { User } from \"../../common/types\";\n\nexport const INIT_USERS = \"INIT_USERS\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const REGISTER_USER = \"REGISTER_USER\";\n\nexport interface InitUsersAction {\n  type: typeof INIT_USERS;\n  data: User[];\n}\nexport interface DeleteUserAction {\n  type: typeof DELETE_USER;\n  data: { id: string };\n}\nexport interface RegisterUserAction {\n  type: typeof REGISTER_USER;\n  data: User;\n}\n\nexport type UserState = User[];\nexport type UserActions =\n  | InitUsersAction\n  | DeleteUserAction\n  | RegisterUserAction;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst render = () => {\n  ReactDOM.render(\n    <>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\nstore.subscribe(render);\n"],"sourceRoot":""}